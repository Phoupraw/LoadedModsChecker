//file:noinspection GroovyAssignabilityCheck
plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
        content {
            includeGroup("com.terraformersmc")
            includeGroup("dev.emi")
        }
    }
    maven {
        name = "Xander Maven"
        url = "https://maven.isxander.dev/releases"
        content {
            includeGroup("dev.isxander") //yet-another-config-lib-fabric
        }
    }
    maven {
        url = "https://maven.quiltmc.org/repository/release"
        content {
            includeGroup("org.quiltmc.parsers")
        }
    }
    maven {
        url = "https://oss.sonatype.org/content/repositories/snapshots"
        content {
            includeGroupAndSubgroups("com.twelvemonkeys")
        }
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup("maven.modrinth")
        }
    }
    maven {
        url "https://maven.firstdarkdev.xyz/snapshots"
        content {
            includeGroup("com.lowdragmc.shimmer")
        }
    }
    maven {
        url "https://maven.shedaniel.me"
        content {
            includeGroup("me.shedaniel")
            includeGroup("dev.architectury")
            includeGroup("me.shedaniel.cloth")
        }
    }
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = "Ladysnake Libs"
        url = 'https://maven.ladysnake.org/releases'
        content {
            includeGroup("org.ladysnake.cardinal-components-api")
        }
    }
    mavenLocal {
        content {
            includeGroup("phoupraw.mcmod")
        }
    }
}

fabricApi {
    configureDataGeneration {
        it.modId = mod_id
        it.strictValidation = true
    }
}

dependencies {
    //## 基础依赖
    minecraft "com.mojang:minecraft:${minecraft}"
    mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
    modApi "net.fabricmc:fabric-loader:${loader}"
    modApi "net.fabricmc.fabric-api:fabric-api:${fabric_api}"
    //## mod依赖
    modLocalRuntime modCompileOnly("com.terraformersmc:modmenu:${modmenu}")
    //include(modLocalRuntime(modCompileOnly("phoupraw.mcmod:TrilevelConfig-1.21:+")))
    //modLocalRuntime modCompileOnly("dev.isxander:yet-another-config-lib:${yacl}")
    //modLocalRuntime modCompileOnly("dev.emi:emi-fabric:${emi}")
    /////*modLocalRuntime*/ modCompileOnly("me.shedaniel:RoughlyEnoughItems-fabric:${rei}")
    //modLocalRuntime modCompileOnly("curse.maven:jade-324717:${jade}")
    //modApi("dev.emi:trinkets:${trinkets}")
    //## 非mod依赖
    compileOnlyApi annotationProcessor("org.projectlombok:lombok:${lombok}")
    //## 非依赖
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName.get()}" }
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = "${archives_base_name}-${minecraft}"
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {

    }
}

String builtJarName() {
    return "${archives_base_name}+${minecraft}+${version}"
}

remapJar {
    archiveFileName.set("${builtJarName()}.jar")
}
remapSourcesJar {
    archiveFileName.set("${builtJarName()}+sources.jar")
}
loom {
    accessWidenerPath = file("src/main/resources/${mod_id}.accessWidener")
    runs {
        datagen {
            inherit(client)
            //property("fabric-api.datagen.modid", "${mod_id}")
            //runDir("run")
        }
        client {
            programArg("--username=Phoupraw")
        }
    }
}